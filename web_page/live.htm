<!DOCTYPE html>
<html>
	<head>
	  <title>Live Electric Data</title>
	  <link rel="shortcut icon" href="http://live-penn-flagship.pantheon.io/sites/default/files/favicon.ico">
	  <link rel="stylesheet" type="text/css" href="/ep_style.css">
	  <style>
			table.mtr_data {
				font-family: Arial, Helvetica, sans-serif;
				width: 100%;
				border-collapse: collapse;
				table-layout: fixed;
			}

			table.mtr_data td, table.mtr_data th {
				font-size: 1em;
				border: 1px solid black;
				padding: 3px 7px 2px 7px;
				text-align: center;
			}
			
			table.mtr_data td:first-child {
				text-align: left;
			}

			table.mtr_data th {
				font-size: 1.1em;
				text-align: center;
				padding-top: 5px;
				padding-bottom: 4px;
				background-color: #a90523;
				color: #ffffff;
			}

			table.mtr_data tr.alt td {
				color: #000000;
				background-color: #FDC8D1;
			}
			
			table.mtr_data tr.typ td {
				color: #000000;
				background-color: #FFFFFF;
			}
	  </style>
	  <script>
			var selSlv = 0;
			var elecClasses = ["curr", "v_LN", "rl_p", "rc_p", "ap_p", "p_fc", "engy", "v_LL"];
			
			
			var txtArray = ["",
							"Eaton IQ DP 4000", "Eaton PXM 2260", "Eaton IQ 200", "Eaton IQ 300", "Eaton Power Xpert 4000",
							"Emon Dmon 3400",
							"GE EPM 3720", "GE EPM 5100", "GE PQM",
							"Schneider PM5300", "Schneider PM8000",
							"Siemens 9200", "Siemens 9330", "Siemens 9340", "Siemens 9350", "Siemens 9360", "Siemens 9510", "Siemens 9610", "Siemens 9700", "Siemens Sentron PAC 4200", "Siemens Sentron PAC 3200",
							"SquareD CM 2350", "SquareD PM 210", "SquareD PM 710", "SquareD Micrologic A Trip Unit", "SquareD Micrologic P Trip Unit", "SquareD Micrologic H Trip Unit", "SquareD CM 3350", "SquareD CM 4000", "SquareD CM 4250", "SquareD PM 800", "SquareD PM 820", "SquareD PM 850", "SquareD PM 870",
							"Chilled Water KEP", "Steam KEP"];
			var valArray = ["0.0.0", 
							"0.1.1", "15.1.0", "0.1.3", "0.1.4", "1.1.0", 
							"2.1.0", 
							"3.1.0", "0.2.1", "4.1.0", 
							"16.1.0", "17.1.0",
							"0.3.1", "5.1.0", "10.8.0", "5.2.0", "5.3.0", "6.1.0", "6.2.0", "5.4.0", "14.1.0", "14.2.0",
							"7.1.0", "13.1.0", "8.1.0", "9.1.0", "9.2.0", "9.3.0", "10.1.0", "10.2.0", "10.3.0", "10.4.0", "10.5.0", "10.6.0", "10.7.0",
							"11.1.0", "12.1.0"];
								
			function isNumeric(num) {
				return !isNaN(num);
			}
			function wSpc(length) {
				return Array(length + 1).join(String.fromCharCode(160));
			}
			
			function concatDropdown(ipStr, idStr, vidStr, typeStr) {
				var cctStr = " ";
				var ipMaxLen = 15;
				var idMaxLen = 9;
				var vidMaxLen = 10;
				var typeMaxLen = 30;
				
				cctStr += wSpc(ipMaxLen - ipStr.length);
				cctStr += ipStr;
				
				cctStr += wSpc(1) + "|" + wSpc(1);
				
				cctStr += wSpc(idMaxLen - idStr.length);
				cctStr += idStr;
				
				cctStr += wSpc(1) + "|" + wSpc(1);
				
				cctStr += wSpc(vidMaxLen - vidStr.length);
				cctStr += vidStr;
				
				cctStr += wSpc(1) + "|" + wSpc(1);
				
				cctStr += wSpc(typeMaxLen - typeStr.length);
				cctStr += typeStr;
				
				return cctStr;
			}
			
			function getDisplayInfo(){
				
							
				nocache = "&nocache=" + Math.random() * 1000000;
		
				var slvSelect = document.getElementById('slave');
				var option = document.createElement("option");
				option.disabled = true;
				option.text = concatDropdown("IP", "Modbus Id", "Modbus vId", "Meter Type");
				slvSelect.appendChild(option);
				drawElecTable();
				
				var request = new XMLHttpRequest();
				request.onreadystatechange = function(){
					
					if (this.readyState == 4) {
						if (this.status == 200) {
							if (this.responseXML != null) {
								var xmlDoc = this.responseXML;
						
								var pageUrl = window.location.href;
								var urlIndex = pageUrl.indexOf("METER=");
								
								if (urlIndex < 0) {
									selSlv = 0;
								}
								else {
									urlIndex += 6;
									var urlIndexStop = urlIndex + 3;
									
									for (; urlIndex < urlIndexStop; ++urlIndex) {
										if (isNumeric(pageUrl[urlIndex])) {
											selSlv = selSlv * 10 + parseInt(pageUrl[urlIndex]);
										}
										else {
											break;
										}
									}
								}
								
								var totSlvs = xmlDoc.getElementsByTagName('meter').length;
								if ((selSlv >= totSlvs) || (selSlv < 0)) {
									selSlv = 0;
								}
								
								var ipStr = "Serial Comms";
								var idStr = "err";
								var vidStr = "err";
								var typeStr = "err";
								
								for (var ii = 0; ii < totSlvs; ++ii){
									var option = document.createElement("option");
									option.value = ii;
									
									if (xmlDoc.getElementsByTagName("mip")[ii].childNodes.length > 0){
										ipStr =  xmlDoc.getElementsByTagName("mip")[ii].childNodes[0].nodeValue;
									}
									if (xmlDoc.getElementsByTagName("dev")[ii].childNodes.length > 0){
										idStr = xmlDoc.getElementsByTagName("dev")[ii].childNodes[0].nodeValue;
									}
									
									if (xmlDoc.getElementsByTagName("vid")[ii].childNodes.length > 0){
										vidStr = xmlDoc.getElementsByTagName("vid")[ii].childNodes[0].nodeValue;
									}
									
									if (xmlDoc.getElementsByTagName("type")[ii].childNodes.length > 0){
										var mtrTyp = xmlDoc.getElementsByTagName("type")[ii].childNodes[0].nodeValue;
										
										for (var jj = 0; jj < txtArray.length; jj++){
											if (valArray[jj] == mtrTyp){
												typeStr = txtArray[jj];
												break;
											}
										}
									}
								
									option.text = concatDropdown(ipStr, idStr, vidStr, typeStr);
									slvSelect.appendChild(option);
								}
								
								slvSelect.selectedIndex = selSlv + 1;  // plus one to account for header
								
								// draw tables
								if (xmlDoc.getElementsByTagName("type")[selSlv].childNodes[0].nodeValue == "11.1.0") {
									drawChwTable();
								}
								else if (xmlDoc.getElementsByTagName("type")[ii].childNodes[0].nodeValue == "12.1.0") {
									drawStmTable();
								}
								else {
									drawElecTable();
								}
							}
						}
					}
				}

				request.open("GET", "info.xml" + nocache, true);
				request.send(null); 
				/*setTimeout('GetMeterData()', 1000);*/
			}
			
			function getMeterData(){	
				nocache = "?METER=" + selSlv + "&nocache=" + Math.random() * 1000000;
				
				var request = new XMLHttpRequest();
				request.onreadystatechange = function(){
					
					if (this.readyState == 4) {
						if (this.status == 200) {
							if (this.responseXML != null) {
								if (this.responseXML.getElementsByTagName('has_data')[0].childNodes[0].nodeValue == "true"){
									var d = new Date();
									document.getElementById("last_update").innerHTML = d.toLocaleString();
									document.getElementById("update_txt").innerHTML = "Successful retrieval!";
									
									var count;
									var cl_cnt;
									var num_cls;
									
									
									
									for (cl_cnt = 0; cl_cnt < 8; cl_cnt++){
										num_cls = this.responseXML.getElementsByTagName(elecClasses[cl_cnt]).length;
										
										for (count = 0; count < num_cls; count++){
											document.getElementsByClassName(elecClasses[cl_cnt])[count].innerHTML = 
												this.responseXML.getElementsByTagName(elecClasses[cl_cnt])[count].childNodes[0].nodeValue;
										}
									}	
								}
								else{
									document.getElementById("update_txt").innerHTML = "Data could not be retrieved."
								}
							}
							else{
								document.getElementById("update_txt").innerHTML = "Data could not be retrieved."
							}
						}
						else{
							document.getElementById("update_txt").innerHTML = "Data could not be retrieved."
						}
					}
					else if (this.readyState == 0){
						document.getElementById("update_txt").innerHTML = "Data could not be retrieved."
					}
					else {
						document.getElementById("update_txt").innerHTML = "Please wait..."
					}
				}
				request.open("GET", "data.xml" + nocache, true);
				request.send(null); 
				/*setTimeout('GetMeterData()', 1000);*/
			}
			
			function drawChwTable() {
			}
			
			function drawStmTable() {
			}
			
			function drawElecTable() {
				var elecRowNms = ["Current", "Voltage L-N", "Real Power", "Reactive Power", "Apparent Power",
			                   "Power Factor", "Real Energy", "Reactive Energy", "Apparent Energy", "Voltage L-L"];
				var tableDiv = document.getElementById("table_div");
				
				var table1 = document.createElement("TABLE");
				table1.className = "mtr_data";
				tableDiv.appendChild(table1);
				
				var tableRow = document.createElement("tr");
				table1.appendChild(tableRow);
				
				addTableCell(tableRow, "th", "width:7em;", "", "Electric");
				addTableCell(tableRow, "th", "", "", "A");
				addTableCell(tableRow, "th", "", "", "B");
				addTableCell(tableRow, "th", "", "", "C");
				addTableCell(tableRow, "th", "", "", "Average");
				addTableCell(tableRow, "th", "", "", "Total");
				
				// Current
				tableRow = document.createElement("tr");
				tableRow.className = "typ";
				table1.appendChild(tableRow);
				addTableCell(tableRow, "td", "", "", "Current");
				for (var jj = 0; jj < 5; ++jj) {
					addTableCell(tableRow, "td", "", elecClasses[0], "");
				}
				
				// Voltage L-N
				tableRow = document.createElement("tr");
				tableRow.className = "alt";
				table1.appendChild(tableRow);
				addTableCell(tableRow, "td", "", "", "Voltage L-N");
				for (var jj = 0; jj < 4; ++jj) {
					addTableCell(tableRow, "td", "", elecClasses[1], "");
				}
				addTableCell(tableRow, "td", "", "", String.fromCharCode(8212));
				
				
				for (var ii = 2; ii < 6; ++ii) {
					var tableRow = document.createElement("tr");
					if (ii % 2 == 0) {
						tableRow.className = "typ";
					}
					else {
						tableRow.className = "alt";
					}
					table1.appendChild(tableRow);
					
					addTableCell(tableRow, "td", "", "", elecRowNms[ii]);
					for (var jj = 0; jj < 3; ++jj) {
						addTableCell(tableRow, "td", "", elecClasses[ii], "");
					}
					addTableCell(tableRow, "td", "", "", String.fromCharCode(8212));
					addTableCell(tableRow, "td", "", elecClasses[ii], "");
				}
				
				for (var ii = 6; ii < 9; ++ii) {
					var tableRow = document.createElement("tr");
					if (ii % 2 == 0) {
						tableRow.className = "typ";
					}
					else {
						tableRow.className = "alt";
					}
					table1.appendChild(tableRow);
					
					addTableCell(tableRow, "td", "", "", elecRowNms[ii]);
					for (var jj = 0; jj < 4; ++jj) {
						addTableCell(tableRow, "td", "", "", String.fromCharCode(8212));
					}
					addTableCell(tableRow, "td", "", elecClasses[6], "");
				}
				
				
				var brkPt = document.createElement("br");
				tableDiv.appendChild(brkPt);
				
				var table1 = document.createElement("TABLE");
				table1.className = "mtr_data";
				tableDiv.appendChild(table1);
				
				var tableRow = document.createElement("tr");
				table1.appendChild(tableRow);
				
				addTableCell(tableRow, "th", "width:7em;", "", "");
				addTableCell(tableRow, "th", "", "", "A - B");
				addTableCell(tableRow, "th", "", "", "B - C");
				addTableCell(tableRow, "th", "", "", "C - A");
				addTableCell(tableRow, "th", "", "", "Average");
				addTableCell(tableRow, "th", "", "", "Total");
				
				tableRow = document.createElement("tr");
				tableRow.className = "typ";
				table1.appendChild(tableRow);
				addTableCell(tableRow, "td", "", "", "Voltage L-L");
				for (var jj = 0; jj < 4; ++jj) {
					addTableCell(tableRow, "td", "", elecClasses[7], "");
				}
				addTableCell(tableRow, "td", "", "", String.fromCharCode(8212));
			}
			
			function addTableCell(tableRow, elmtType, cellStyle, cellClass, cellHtml) {
				var tableCell = document.createElement(elmtType);
				tableCell.style = cellStyle;
				tableCell.className = cellClass;
				tableCell.innerHTML = cellHtml;
				tableRow.appendChild(tableCell);
			}
		</script>
	</head>


	<!-- Main content -->
	<body onload="getDisplayInfo()">  <!-- onload="GetMeterData()"> -->
		<!-- Site navigation menu -->
		<div id="main-wrapper">
			<nav>
				<ul class="navbar">
					<li><a href="/index.htm">Home</a></li>
					<li><a href="/gensetup.htm">General Setup</a></li>
					<li><a href="/mtrsetup.htm">Meter Setup</a></li>
					<li><a id="live" href="/live.htm">Live Data</a></li>
					<li><a href="/pastdown.htm">Download Data</a></li>
					<li><a href="/pastview.htm">Graph Data</a></li>
					<li><a href="/reset.htm">Reset</a></li>
					
					<a id="imglink" href="http://www.upenn.edu/">
						<img style="width:155px;height:43px;border:0;" src="/images/logo_let.gif" alt="Upenn">
					</a>
				</ul>
			</nav>
			<article>
			<!-- Main content -->
				<br/>
				<form method="get">
					<!-- <input type="submit" value="Go to Meter:"> -->
					<label for="slave">Go to Slave: </label>
					<select id="slave" onchange="this.form.submit()" name="METER" style="font-family: monospace;">
						<!-- <option selected disabled>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;IP&nbsp;|&nbsp;Modbus Id&nbsp;|&nbsp;Modbus vId&nbsp;|&nbsp;Meter&nbsp;</option> -->
						<!-- <option>&nbsp;255.255.255.255&nbsp;|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;255&nbsp;|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;128&nbsp;|&nbsp;SquareD Micrologic A Trip Unit</option> -->
						<!-- <option>&nbsp;&nbsp;&nbsp;&nbsp;10.166.7.201&nbsp;|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;5&nbsp;|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;25&nbsp;|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Eaton PXM 2260</option> -->
						<!-- <option>&nbsp;&nbsp;&nbsp;&nbsp;Serial Comms&nbsp;|&nbsp;255&nbsp;|&nbsp;255&nbsp;|&nbsp;SquareD Micrologic A Trip Unit</option> -->
					</select>
				</form>
				
				<br>
				<!-- <p>Current Slave:<br/> -->
					<!-- <span id="slvIP">IP: </span><br/> -->
					<!-- <span id="slvID">Modbus ID: </span><br/> -->
					<!-- <span id="slvVID">Modbus Virtual ID: </span><br/> -->
					<!-- <span id="slvTyp">Meter Type: </span> -->
				<!-- </p> -->
				<!-- <br> -->
				<p style="margin-top: 0em">
					<button onclick="getMeterData()">Get Data</button>
					<span id="update_txt" style="padding-left:2em">Data not yet retrieved.</span>
					<span style="padding-left:2em">Last update: </span>
					<span id="last_update"></span>
				</p>

				<div id="table_div">
					<!-- <table class="mtr_data">
						<tr>
							<th style="width:7em">Electric</th> 
							
							<th>A</th>
							<th>B</th>
							<th>C</th>
							
							<th>Average</th>
							<th>Total</th>
						</tr>
						<tr class="typ">
							<td>Current</td>
							
							<td class="curr"></td>
							<td class="curr"></td>
							<td class="curr"></td>
							
							<td class="curr"></td>
							<td class="curr"></td>
						</tr>
						<tr class="alt">
							<td>Voltage L-N</td>
							
							<td class="v_LN"></td>
							<td class="v_LN"></td>
							<td class="v_LN"></td>
							
							<td class="v_LN"></td>
							<td>&mdash;</td>
						</tr>
						<tr class="typ">
							<td>Real Power</td>
							
							<td class="rl_p"></td>
							<td class="rl_p"></td>
							<td class="rl_p"></td>
							
							<td>&mdash;</td>
							<td class="rl_p"></td>
						</tr>
						<tr class="alt">
							<td>Reactive Power</td>
							
							<td class="rc_p"></td>
							<td class="rc_p"></td>
							<td class="rc_p"></td>
							
							<td>&mdash;</td>
							<td class="rc_p"></td>
						</tr>
						<tr class="typ">
							<td>Apparent Power</td>
							
							<td class="ap_p"></td>
							<td class="ap_p"></td>
							<td class="ap_p"></td>
							
							<td>&mdash;</td>
							<td class="ap_p"></td>
						</tr>
						<tr class="alt">
							<td>Power Factor</td>
							
							<td class="p_fc"></td>
							<td class="p_fc"></td>
							<td class="p_fc"></td>
							
							<td>&mdash;</td>
							<td class="p_fc"></td>
						</tr>
						<tr class="typ">
							<td>Real Energy</td>
							
							<td>&mdash;</td>
							<td>&mdash;</td>
							<td>&mdash;</td>
							
							<td>&mdash;</td>
							<td class="engy"></td>
						</tr>
						<tr class="alt">
							<td>Reactive Energy</td>
							
							<td>&mdash;</td>
							<td>&mdash;</td>
							<td>&mdash;</td>
							
							<td>&mdash;</td>
							<td class="engy"></td>
						</tr>
						<tr class="typ">
							<td>Apparent Energy</td>
							
							<td>&mdash;</td>
							<td>&mdash;</td>
							<td>&mdash;</td>
							
							<td>&mdash;</td>
							<td class="engy"></td>
						</tr>
					</table>
					<br>

					<table class="mtr_data">
						<tr>
							<th style="width:7em"></th>  
							
							<th>A - B</th>
							<th>B - C</th>
							<th>C - A</th>
							
							<th>Average</th>
							<th>Total</th>
						</tr>
						<tr class="typ">
							<td>Voltage L-L</td>
							
							<td class="v_LL"></td>
							<td class="v_LL"></td>
							<td class="v_LL"></td>
							
							<td class="v_LL"></td>
							<td>&mdash;</th>
						</tr>
					</table>
					<br>
					<br> -->
				</div>
			</article>		

			<footer>
				<address>
					Updated 3 February 2016 by <a href="mailto:mteter@upenn.edu?Subject=Modbus%20Gateway%20Webpage" target="_top">Matthew J. Teter</a>
					</br>
					<a href="http://www.facilities.upenn.edu/">University of Pennsylvania Facilities & Real Estate</a>
					<br/>
					3101 Walnut Street
					<br/>
					Philadelphia, PA 19104
					<br/>
					<a href="http://www.upenn.edu/computing/security/reporting_copyright.php">Copyright</a>
				</address>
		    </footer>
		</div>
	</body>
</html>